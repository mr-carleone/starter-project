services:
  postgres:
    image: postgres:13
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ivan@rus.ru
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - app-net
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  fastapi:
    build: .
    container_name: fastapi_container
    volumes:
      - ./src:/app/src
      - ./alembic:/app/alembic
    env_file: .env
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-net
    command: sh -c "sleep 20 && alembic upgrade head && uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload"

networks:
  app-net:
    driver: bridge
    external: true

volumes:
  postgres-data:
  pgadmin-data:
